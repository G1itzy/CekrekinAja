
name: CekrekinAja CI/CD (with MySQL)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Membuat service container untuk database MySQL
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      # 1. Mengambil kode dari repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Menyiapkan lingkungan PHP dengan ekstensi MySQL
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, curl, dom, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml, pdo_mysql

      # 3. Install dependensi Composer
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # 4. Install dependensi NPM dan build aset
      - name: Install NPM dependencies and build assets
        run: |
          npm install
          npm run prod
      # 5. Siapkan file .env
      - name: Prepare environment file
        run: php -r "copy('.env.example', '.env');"

      # 6. Generate application key
      - name: Generate application key
        run: php artisan key:generate

      # 7. Setup Database dari file .sql ke MySQL Service
      - name: Setup Test Database
        run: sudo apt-get install -y mysql-client && mysql -h 127.0.0.1 --port=${{ job.services.mysql.ports[3306] }} -u root -ppassword laravel_test < database/db_CekrekinAja.sql

      # 8. Jalankan tes menggunakan koneksi MySQL
      - name: Run Pest/PHPUnit tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_DATABASE: laravel_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan test

    deployment:
    tasks:
    - export DEPLOYPATH=/home/xukxmbxe/CekrekinAja/public
    - mkdir -p $DEPLOYPATH
    - /bin/rm -rf $DEPLOYPATH/*
    - /bin/cp -R * $DEPLOYPATH
    
    - '[ ! -f "$DEPLOYPATH/.env" ] && /bin/cp $DEPLOYPATH/.env.example $DEPLOYPATH/.env'

    - /opt/cpanel/alt-php82/root/usr/bin/php -d memory_limit=-1 /opt/cpanel/alt-php82/root/usr/bin/composer install --no-progress --prefer-dist --optimize-autoloader -d $DEPLOYPATH

    - cd $DEPLOYPATH && /usr/bin/npm install
    - cd $DEPLOYPATH && /usr/bin/npm run prod
    - /opt/cpanel/ealt-php82/root/usr/bin/php $DEPLOYPATH/artisan key:generate
    - /opt/cpanel/eaalt-php82/root/usr/bin/php $DEPLOYPATH/artisan migrate --force
    
    - /opt/cpanel/ealt-php82/root/usr/bin/php $DEPLOYPATH/artisan cache:clear
    - /opt/cpanel/alt-php82/root/usr/bin/php $DEPLOYPATH/artisan config:clear
    - /opt/cpanel/alt-php82/root/usr/bin/php $DEPLOYPATH/artisan route:clear
    - /opt/cpanel/alt-php82/root/usr/bin/php $DEPLOYPATH/artisan view:clear

    - /bin/find $DEPLOYPATH -type f -exec chmod 644 {} \;
    - /bin/find $DEPLOYPATH -type d -exec chmod 755 {} \;
    - /bin/chmod -R 775 $DEPLOYPATH/storage
    - /bin/chmod -R 775 $DEPLOYPATH/bootstrap/cache
    
    - /bin/rm -rf $DEPLOYPATH/.git

    - /bin/rm -f $DEPLOYPATH/.cpanel.yml
    - echo "Deployment CekrekinAja selesai di $(date)!"
