name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to run tests
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, curl, dom, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml, pdo_mysql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

  # Job to deploy to the server after tests pass
  deploy:
    needs: test  # Ensure deploy only runs after the test job passes
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Install Netcat, Node.js (npm), and fix DB credentials
        run: |
          # Install Netcat to check SSH connection
          sudo apt-get update -y || true
          sudo apt-get install -y netcat || true
  
          # Install Node.js and npm
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs
  
          echo "Testing SSH connection..."  # Debugging
          # Test the SSH connection to ensure the port is open
          nc -zv ${{ secrets.SSH_HOST }} 5451 || exit 1  # Exit if the connection fails
  
          echo "SSH connection successful. Starting deployment..."
  
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SSH_HOST }}  # Use SSH host from secrets
          username: ${{ secrets.SSH_USERNAME }}  # Use SSH username from secrets
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Use SSH private key from secrets
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}  # Passphrase if required
          port: 5451  # Ensure SSH port is correct
          script: |
            # Step 1: Navigate to the project directory
            echo "Navigating to project directory..."
            cd /home/xukxmbxe/RentalKamera || { echo "Directory not found!"; exit 1; }
  
            # Step 2: Check if it's a Git repository
            if [ ! -d ".git" ]; then
              echo "Not a git repository. Cloning the repository..."
              rm -rf /home/xukxmbxe/RentalKamera/*  # Clean the directory before cloning
              git clone https://github.com/G1itzy/CekrekinAja.git . || { echo "Git clone failed!"; exit 1; }
            else
              echo "Git repository found. Pulling the latest changes..."
              git pull origin main || { echo "Git pull failed!"; exit 1; }
            fi
  
            # Step 3: Install composer dependencies
            echo "Installing Composer dependencies..."
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev || { echo "Composer install failed!"; exit 1; }
  
            # Step 4: Update the production .env file with secrets
            echo "Setting the production environment variables..."
            echo "${{ secrets.PROD_ENV_FILE }}" > .env || { echo "Failed to set .env file!"; exit 1; }
  
            # Step 5: Run database migrations
            echo "Running database migrations..."
            php artisan migrate --force || { echo "Database migration failed!"; exit 1; }
  
            # Step 6: Clear and cache Laravel configurations
            echo "Clearing application cache..."
            php artisan cache:clear || { echo "Cache clear failed!"; exit 1; }
  
            echo "Caching application configurations..."
            php artisan config:cache || { echo "Config cache failed!"; exit 1; }
  
            echo "Caching routes..."
            php artisan route:cache || { echo "Route cache failed!"; exit 1; }
  
            echo "Caching views..."
            php artisan view:cache || { echo "View cache failed!"; exit 1; }
  
            # Step 7: Install npm dependencies and build assets
            echo "Installing npm dependencies..."
            npm install || { echo "npm install failed!"; exit 1; }
  
            echo "Building production assets..."
            npm run prod || { echo "npm run prod failed!"; exit 1; }
  
            echo "Deployment successful!"
