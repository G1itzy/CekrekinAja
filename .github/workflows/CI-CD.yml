name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, curl, dom, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml, pdo_mysql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Tests
        run: php artisan test

  deploy:
    needs: test  # Pastikan 'deploy' hanya berjalan setelah 'test' berhasil
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SSH_HOST }}  # Host SSH server (pastikan ada di GitHub Secrets)
          username: ${{ secrets.SSH_USERNAME }}  # Username SSH server
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Kunci privat SSH
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}  # Passphrase SSH jika ada
          port: 5451  # Port SSH (pastikan benar)
          script: |
            echo "Testing SSH connection..."  # Debugging
            # Uji koneksi SSH ke server untuk memastikan port 5451 terbuka
            nc -zv ${{ secrets.SSH_HOST }} 5451 || exit 1  # Gagal jika koneksi tidak berhasil

            echo "SSH connection successful. Starting deployment..."

            # Langkah-langkah deployment utama
            cd /home/xukxmbxe/RentalKamera
            git pull origin main  # Menarik perubahan terbaru dari repo utama
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev  # Instal dependensi composer
            echo "${{ secrets.PROD_ENV_FILE }}" > .env  # Pastikan file .env diisi dengan data yang benar
            php artisan migrate --force  # Menjalankan migrasi database
            php artisan cache:clear  # Membersihkan cache aplikasi
            php artisan config:cache  # Meng-cache konfigurasi aplikasi
            php artisan route:cache  # Meng-cache rute aplikasi
            php artisan view:cache  # Meng-cache tampilan aplikasi
            npm install  # Install dependensi npm
            npm run prod  # Membuat build produksi
