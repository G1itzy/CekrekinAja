name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to run tests
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, curl, dom, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml, pdo_mysql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

  # Job to deploy to the server after tests pass
  deploy:
    needs: test  # Ensure deploy only runs after the test job passes
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SSH_HOST }}  # Use SSH host from secrets
          username: ${{ secrets.SSH_USERNAME }}  # Use SSH username from secrets
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Use SSH private key from secrets
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}  # Passphrase if required
          port: 5451  # Ensure SSH port is correct
          script: |
            # Install netcat (nc) to check SSH connection without sudo
            apt-get update && apt-get install -y netcat
  
            echo "Testing SSH connection..."  # Debugging
            # Test the SSH connection to ensure port is open
            nc -zv ${{ secrets.SSH_HOST }} 5451 || exit 1  # Exit if the connection fails
  
            echo "SSH connection successful. Starting deployment..."
  
            # Deployment steps
            cd /home/xukxmbxe/RentalKamera  # Adjust path
            git pull origin main  # Pull the latest changes from the main branch
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev  # Install composer dependencies
            echo "${{ secrets.PROD_ENV_FILE }}" > .env  # Use the correct production .env file from secrets
            php artisan migrate --force  # Run database migrations
            php artisan cache:clear  # Clear the application cache
            php artisan config:cache  # Cache the application config
            php artisan route:cache  # Cache the routes
            php artisan view:cache  # Cache the views
            npm install  # Install npm dependencies
            npm run prod  # Build the production assets
